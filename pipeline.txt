
Here is a plain Jenkins pipeline script without any headings, description, notes to provision an AWS EC2 instance using Terraform:
```bash
pipeline {
    agent any

    stages {
        stage('Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Validate') {
            steps {
                sh 'terraform validate'
            }
        }
        stage('Apply') {
            steps {
                sh 'terraform apply'
            }
        }
    }
}
```
This script assumes that you have a Terraform configuration file named `main.tf` in the same directory as the pipeline script, and that the file contains the necessary configuration to provision an EC2 instance. The script initializes Terraform, validates the configuration, and then applies the changes to provision the EC2 instance.

Note that this script does not include any error handling or logging, so you may want to add those features if you plan to use this script in production. Additionally, you will need to replace `agent any` with the actual agent you want to use (e.g., `agent 'docker'`) if you want to run this pipeline in a Docker container.
