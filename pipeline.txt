
Here is a Jenkins pipeline script that you can use to execute the Terraform script in an automated way:
```
pipeline {
    agent any

    stages {
        stage('Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Validate') {
            steps {
                sh 'terraform validate'
            }
        }
        stage('Apply') {
            steps {
                sh 'terraform apply --auto-approve'
            }
        }
    }
}
```
This script assumes that you have the `terraform` command installed on your Jenkins agent. The `agent any` line specifies that the pipeline can run on any available agent.

The `stages` block defines three stages: `Init`, `Validate`, and `Apply`. Each stage contains one or more `steps` that specify the commands to run in that stage.

In the `Init` stage, the `sh 'terraform init'` command initializes the Terraform environment. In the `Validate` stage, the `sh 'terraform validate'` command validates the Terraform configuration. Finally, in the `Apply` stage, the `sh 'terraform apply --auto-approve'` command applies the Terraform changes.

Note that the `--auto-approve` flag tells Terraform to automatically approve any changes that it proposes during the apply operation. This can be useful if you want to automate the approval process.
//Build Number 65
