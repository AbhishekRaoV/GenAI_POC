Here is a plain Jenkins pipeline script without any headings, description, or notes to provision an AWS EC2 instance using Terraform:
```bash
pipeline {
  agent any

  stages {
    stage('Terraform init') {
      steps {
        sh 'terraform init'
      }
    }

    stage('Terraform validate') {
      steps {
        sh 'terraform validate'
      }
    }

    stage('Terraform apply') {
      steps {
        sh 'terraform apply'
      }
    }
  }
}
```
This script assumes that you have already created a Terraform configuration file named `main.tf` in the same directory as the pipeline script, and that the file contains the necessary resources for provisioning an EC2 instance. The script uses the `sh` step to run the `terraform init`, `terraform validate`, and `terraform apply` commands in sequence.

Note that this script does not include any error handling or logging, so you may want to add those features if you plan to use this script in production. Additionally, you will need to modify the `main.tf` file to match your specific requirements for provisioning an EC2 instance.

